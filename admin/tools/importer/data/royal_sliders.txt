a:1:{s:5:"royal";a:3:{i:0;a:9:{s:2:"id";s:2:"12";s:6:"active";s:1:"1";s:4:"type";s:6:"custom";s:4:"name";s:31:"Fullscreen slider with video bg";s:4:"skin";s:5:"rsUni";s:8:"template";s:7:"default";s:6:"slides";s:2758:"[{"title":"slide4_1","html":"<div class=\"rsContent slideContent slide-1\" data-effect=\"rsTopLeft\">\r\n  <div class=\"main main_fixed\">\r\n    <div class=\"rsABlock textBlock\" data-fade-effect=\"none\" data-move-effect=\"bottom\" data-opposite=\"true\" data-move-offset=\"900\" data-delay=\"300\" data-speed=\"1500\" data-easing=\"easeOutBack\">\r\n      <div class=\"title\">WELCOME TO <span class=\"theme_accent2\">LAW<\/span><span class=\"theme_accent\">OFFICE<\/span><\/div>\r\n      <p>Law Office is an excellent starting point for your website<\/p>\r\n    <\/div>\r\n    <div class=\"rsABlock order\" data-fade-effect=\"none\" data-move-effect=\"bottom\" data-opposite=\"true\" data-move-offset=\"900\" data-delay=\"1500\" data-speed=\"900\" data-easing=\"\">\r\n      <a href=\"http:\/\/themeforest.net\/item\/punto-multipurpose-wordpress-theme\/8803904?WT.ac=portfolio_item&WT.z_author=ThemeREX\" class=\"theme_accent_bg\">PURCHASE<\/a>\r\n    <\/div>\r\n  <\/div>\r\n<\/div>"},{"title":"slide5_1","html":"<div class=\"rsContent slideContent slide-2\" data-effect=\"rsTopLeft\">\r\n  <div class=\"main main_fixed\">\r\n    <div class=\"rsABlock textBlock\" data-fade-effect=\"none\" data-move-effect=\"bottom\" data-opposite=\"true\" data-move-offset=\"900\" data-delay=\"300\" data-speed=\"1500\" data-easing=\"easeOutBack\">\r\n      <div class=\"title\">START YOUR WEBSITE WITH <span class=\"theme_accent2\">LAW<\/span><span class=\"theme_accent\">OFFICE<\/span><\/div>\r\n      <p>Law Office - super Flexible, fully Responsive and multi Purpose wordpress theme<\/p>\r\n    <\/div>\r\n    <div class=\"rsABlock order\" data-fade-effect=\"none\" data-move-effect=\"bottom\" data-opposite=\"true\" data-move-offset=\"900\" data-delay=\"1500\" data-speed=\"900\" data-easing=\"\">\r\n      <a href=\"http:\/\/themeforest.net\/item\/punto-multipurpose-wordpress-theme\/8803904?WT.ac=portfolio_item&WT.z_author=ThemeREX\" class=\"theme_accent_bg\">BUY THEME<\/a>\r\n    <\/div>\r\n  <\/div>\r\n<\/div>"},{"html":"<div class=\"rsContent slideContent slide-3\" data-effect=\"rsTopLeft\">\r\n  <div class=\"main main_fixed\">\r\n    <div class=\"rsABlock textBlock\" data-fade-effect=\"none\" data-move-effect=\"bottom\" data-opposite=\"true\" data-move-offset=\"900\" data-delay=\"300\" data-speed=\"1500\" data-easing=\"easeOutBack\">\r\n      <div class=\"title\">MULTIFUNCTIONAL WEBSITE<\/div>\r\n      <p>Optimized for Work with Touchscreen<\/p>\r\n    <\/div>\r\n    <img class=\"rsABlock image\" src=\"\/wp-content\/uploads\/2014\/07\/fullscreen-slide-6-2.png\" data-fade-effect=\"none\" data-move-effect=\"top\" data-opposite=\"true\" data-move-offset=\"900\" data-delay=\"1500\" data-speed=\"900\" data-easing=\"\">\r\n  <\/div>\r\n<\/div>"}]";s:7:"options";s:508:"{"template":"default","sopts":{"width":"100%","height":"","autoHeight":"true","slidesSpacing":"0","imageScaleMode":"fill","arrowsNav":"false","loop":"true","numImagesToPreload":"2"},"image_generation":{"imageWidth":"","imageHeight":"","thumbImageWidth":"","thumbImageHeight":""},"thumbs":{"thumbWidth":"96","thumbHeight":"72"},"autoPlay":{"enabled":"true","delay":"7000","stopAtAction":"false","pauseOnHover":"false"},"fullscreen":{"enabled":"true"},"block":{"moveOffset":"900","speed":"1500","delay":"300"}}";s:13:"template_html";s:181:"<div class="rsContent">
  {{image_tag}}
  {{thumbnail}}
  {{html}}
  {{animated_blocks}}
  {{#link_url}}
  <a class="rsLink" href="{{link_url}}">{{title}}</a>
  {{/link_url}}
</div>";}i:1;a:9:{s:2:"id";s:2:"13";s:6:"active";s:1:"1";s:4:"type";s:6:"custom";s:4:"name";s:18:"WooCommerce slider";s:4:"skin";s:5:"rsUni";s:8:"template";s:7:"default";s:6:"slides";s:4955:"[{"title":"slide1_1","html":"<div class=\"slideContent slide-1\" style=\"background-image: url(\/wp-content\/uploads\/2015\/02\/shop-slide-1.jpg);\">\r\n  <div class=\"main main_fixed\">\r\n    <div class=\"rsABlock textBlock textTitle1\" data-fade-effect=\"none\" data-move-effect=\"top\" data-opposite=\"true\" data-move-offset=\"1200\" data-delay=\"300\" data-speed=\"1200\" data-easing=\"easeOutBack\">\r\n      <div class=\"title\">TAX FACTS<\/div>\r\n    <\/div>\r\n    <div class=\"rsABlock textBlock textTitle2\" data-fade-effect=\"none\" data-move-effect=\"bottom\" data-opposite=\"true\" data-move-offset=\"1200\" data-delay=\"1200\" data-speed=\"1200\" data-easing=\"\">\r\n      <div class=\"title\">On individuals & Small Business<\/div>\r\n    <\/div>\r\n    <div class=\"rsABlock textBlock textDescr\" data-fade-effect=\"none\" data-move-effect=\"right\" data-opposite=\"true\" data-move-offset=\"1200\" data-delay=\"2100\" data-speed=\"1200\" data-easing=\"\">\r\n      <p>We will help you build strong online business by creating a professional website which best suits your needs and the needs of your target audience.<\/p>\r\n    <\/div>\r\n    <div class=\"rsABlock order order1\" data-fade-effect=\"none\" data-move-effect=\"bottom\" data-opposite=\"true\" data-move-offset=\"900\" data-delay=\"3000\" data-speed=\"900\" data-easing=\"\">\r\n      <a href=\"http:\/\/themeforest.net\/item\/punto-multipurpose-wordpress-theme\/8803904?WT.ac=portfolio_item&WT.z_author=ThemeREX\">Purchase Now<\/a>\r\n    <\/div>\r\n    <div class=\"rsABlock order order2\" data-fade-effect=\"none\" data-move-effect=\"bottom\" data-opposite=\"true\" data-move-offset=\"900\" data-delay=\"3300\" data-speed=\"900\" data-easing=\"\">\r\n      <a href=\"http:\/\/themeforest.net\/user\/ThemeREX\/portfolio?WT.ac=item_portfolio&WT.seg_1=item_portfolio&WT.z_author=ThemeREX\">Learn More<\/a>\r\n    <\/div>\r\n    <img alt=\"\" class=\"rsABlock image\" data-fade-effect=\"none\" data-move-effect=\"bottom\" data-opposite=\"true\" data-move-offset=\"900\" data-delay=\"1500\" data-speed=\"2400\" data-easing=\"easeOutBack\" src=\"\/wp-content\/uploads\/2015\/02\/tax-facts1.png\">\r\n    <div class=\"rsABlock textPrice\" data-fade-effect=\"none\" data-move-effect=\"top\" data-opposite=\"true\" data-move-offset=\"300\" data-delay=\"3600\" data-speed=\"300\" data-easing=\"\">\r\n      <div><span>$12.80<\/span><\/div>\r\n    <\/div>\r\n  <\/div>\r\n<\/div>"},{"title":"slide2_1","html":"<div class=\"slideContent slide-1\" style=\"background-image: url(\/wp-content\/uploads\/2015\/02\/shop-slide-1.jpg);\"> \r\n  <div class=\"main main_fixed\">\r\n    <div class=\"rsABlock textBlock textTitle1\" data-fade-effect=\"none\" data-move-effect=\"top\" data-opposite=\"true\" data-move-offset=\"1200\" data-delay=\"300\" data-speed=\"1200\" data-easing=\"easeOutBack\">\r\n      <div class=\"title\">CCL<\/div>\r\n    <\/div>\r\n    <div class=\"rsABlock textBlock textTitle2\" data-fade-effect=\"none\" data-move-effect=\"bottom\" data-opposite=\"true\" data-move-offset=\"1200\" data-delay=\"1200\" data-speed=\"1200\" data-easing=\"\">\r\n      <div class=\"title\">Exam Preparation<\/div>\r\n    <\/div>\r\n    <div class=\"rsABlock textBlock textDescr\" data-fade-effect=\"none\" data-move-effect=\"right\" data-opposite=\"true\" data-move-offset=\"1200\" data-delay=\"2100\" data-speed=\"1200\" data-easing=\"\">\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut.<\/p>\r\n    <\/div>\r\n    <div class=\"rsABlock order order1\" data-fade-effect=\"none\" data-move-effect=\"bottom\" data-opposite=\"true\" data-move-offset=\"900\" data-delay=\"3000\" data-speed=\"900\" data-easing=\"\">\r\n      <a href=\"http:\/\/themeforest.net\/item\/punto-multipurpose-wordpress-theme\/8803904?WT.ac=portfolio_item&WT.z_author=ThemeREX\">Purchase Now<\/a>\r\n    <\/div>\r\n    <div class=\"rsABlock order order2\" data-fade-effect=\"none\" data-move-effect=\"bottom\" data-opposite=\"true\" data-move-offset=\"900\" data-delay=\"3300\" data-speed=\"900\" data-easing=\"\">\r\n      <a href=\"http:\/\/themeforest.net\/user\/ThemeREX\/portfolio?WT.ac=item_portfolio&WT.seg_1=item_portfolio&WT.z_author=ThemeREX\">Learn More<\/a>\r\n    <\/div>\r\n    <img alt=\"\" class=\"rsABlock image\" data-fade-effect=\"none\" data-move-effect=\"bottom\" data-opposite=\"true\" data-move-offset=\"900\" data-delay=\"1500\" data-speed=\"2400\" data-easing=\"easeOutBack\" src=\"\/wp-content\/uploads\/2015\/02\/exam-preparations.png\">\r\n    <div class=\"rsABlock textPrice\" data-fade-effect=\"none\" data-move-effect=\"top\" data-opposite=\"true\" data-move-offset=\"300\" data-delay=\"3600\" data-speed=\"300\" data-easing=\"\">\r\n      <div><span>$18.90<\/span><\/div>\r\n    <\/div>\r\n  <\/div>\r\n<\/div>"}]";s:7:"options";s:475:"{"template":"default","sopts":{"width":"100%","height":"500px","autoScaleSlider":"true","autoScaleSliderWidth":"","autoScaleSliderHeight":"","slidesSpacing":"0","imageScalePadding":"0","arrowsNav":"false"},"image_generation":{"imageWidth":"","imageHeight":"","thumbImageWidth":"","thumbImageHeight":""},"thumbs":{"thumbWidth":"96","thumbHeight":"72"},"autoPlay":{"enabled":"true","delay":"7000","stopAtAction":"false"},"block":{"moveOffset":"20","speed":"400","delay":"200"}}";s:13:"template_html";s:181:"<div class="rsContent">
  {{image_tag}}
  {{thumbnail}}
  {{html}}
  {{animated_blocks}}
  {{#link_url}}
  <a class="rsLink" href="{{link_url}}">{{title}}</a>
  {{/link_url}}
</div>";}i:2;a:9:{s:2:"id";s:2:"15";s:6:"active";s:1:"1";s:4:"type";s:6:"custom";s:4:"name";s:11:"Home Slider";s:4:"skin";s:5:"rsUni";s:8:"template";s:7:"default";s:6:"slides";s:4300:"[{"title":"slide15_1","html":"<div class=\"rsContent slideContent slide-2\" data-effect=\"rsTopLeft\">\r\n\t<div class=\"fonBlock\" style=\"background-image: url('http:\/\/lawoffice.themerex.net\/wp-content\/uploads\/2015\/02\/lawoffice-slide-1.jpg');\"><\/div>\r\n  <div class=\"main main_fixed\">\r\n    <div class=\"rsABlock imageBlock icon\" data-move-effect=\"top\" data-move-offset=\"900\" data-delay=\"300\" data-speed=\"900\" data-easing=\"easeOutBack\" data-fade-effect=\"none\" data-opposite=\"true\">\r\n\t    <img alt=\"\" src=\"\/wp-content\/uploads\/2015\/02\/libra4-1.png\">\r\n    <\/div>\r\n    <div class=\"rsABlock textBlock title\" data-move-effect=\"bottom\" data-move-offset=\"900\" data-delay=\"300\" data-speed=\"900\" data-easing=\"easeOutBack\" data-fade-effect=\"none\" data-opposite=\"true\">\r\n\t    <div>We Bring Justice<\/div>\r\n    <\/div>\r\n    <div class=\"rsABlock textBlock text\" data-move-effect=\"right\" data-move-offset=\"900\" data-delay=\"1000\" data-speed=\"900\" data-easing=\"\" data-fade-effect=\"none\" data-opposite=\"true\">\r\n\t    <div>Efficient Service For Over 10 Years<\/div>\r\n    <\/div>\r\n    <div class=\"rsABlock order\" data-move-effect=\"none\" data-move-offset=\"900\" data-delay=\"1500\" data-speed=\"900\" data-easing=\"\" data-fade-effect=\"fadeIn\" data-opposite=\"true\">\r\n      <a href=\"#\">learn more<\/a>\r\n    <\/div>\r\n  <\/div>\r\n<\/div>"},{"title":"slide15_2","html":"<div class=\"rsContent slideContent slide-2\" data-effect=\"rsTopLeft\">\r\n\t<div class=\"fonBlock\" style=\"background-image: url('http:\/\/lawoffice.themerex.net\/wp-content\/uploads\/2015\/02\/lawoffice-slide-2.jpg');\"><\/div>\r\n  <div class=\"main main_fixed\">\r\n    <div class=\"rsABlock imageBlock icon\" data-move-effect=\"top\" data-move-offset=\"900\" data-delay=\"300\" data-speed=\"900\" data-easing=\"easeOutBack\" data-fade-effect=\"none\" data-opposite=\"true\">\r\n\t    <img alt=\"\" src=\"\/wp-content\/uploads\/2015\/02\/libra4-1.png\">\r\n    <\/div>\r\n    <div class=\"rsABlock textBlock title\" data-move-effect=\"bottom\" data-move-offset=\"900\" data-delay=\"300\" data-speed=\"900\" data-easing=\"easeOutBack\" data-fade-effect=\"none\" data-opposite=\"true\">\r\n\t    <div>The Client Experience<\/div>\r\n    <\/div>\r\n    <div class=\"rsABlock textBlock text\" data-move-effect=\"right\" data-move-offset=\"900\" data-delay=\"1000\" data-speed=\"900\" data-easing=\"\" data-fade-effect=\"none\" data-opposite=\"true\">\r\n\t    <div>Alimony \/ Spousal Support<\/div>\r\n    <\/div>\r\n    <div class=\"rsABlock order\" data-move-effect=\"none\" data-move-offset=\"900\" data-delay=\"1500\" data-speed=\"900\" data-easing=\"\" data-fade-effect=\"fadeIn\" data-opposite=\"true\">\r\n      <a href=\"#\">read more<\/a>\r\n    <\/div>\r\n  <\/div>\r\n<\/div>"},{"title":"slide15_3","html":"<div class=\"rsContent slideContent slide-2\" data-effect=\"rsTopLeft\">\r\n\t<div class=\"fonBlock\" style=\"background-image: url('http:\/\/lawoffice.themerex.net\/wp-content\/uploads\/2015\/02\/lawoffice-slide-3.jpg');\"><\/div>\r\n  <div class=\"main main_fixed\">\r\n    <div class=\"rsABlock imageBlock icon\" data-move-effect=\"top\" data-move-offset=\"900\" data-delay=\"300\" data-speed=\"900\" data-easing=\"easeOutBack\" data-fade-effect=\"none\" data-opposite=\"true\">\r\n\t    <img alt=\"\" src=\"\/wp-content\/uploads\/2015\/02\/libra4-1.png\">\r\n    <\/div>\r\n    <div class=\"rsABlock textBlock title\" data-move-effect=\"bottom\" data-move-offset=\"900\" data-delay=\"300\" data-speed=\"900\" data-easing=\"easeOutBack\" data-fade-effect=\"none\" data-opposite=\"true\">\r\n\t    <div>DWI \/ DUI Defense<\/div>\r\n    <\/div>\r\n    <div class=\"rsABlock textBlock text\" data-move-effect=\"right\" data-move-offset=\"900\" data-delay=\"1000\" data-speed=\"900\" data-easing=\"\" data-fade-effect=\"none\" data-opposite=\"true\">\r\n      <div>Learn about the most common ways to fight a DUI \/ DWI charge.<\/div>\r\n    <\/div>\r\n    <div class=\"rsABlock order\" data-move-effect=\"none\" data-move-offset=\"900\" data-delay=\"1500\" data-speed=\"900\" data-easing=\"\" data-fade-effect=\"fadeIn\" data-opposite=\"true\">\r\n      <a href=\"#\">learn more<\/a>\r\n    <\/div>\r\n  <\/div>\r\n<\/div>"}]";s:7:"options";s:508:"{"template":"default","sopts":{"width":"100%","height":"","autoHeight":"true","slidesSpacing":"0","imageScaleMode":"fill","arrowsNav":"false","loop":"true","numImagesToPreload":"2"},"image_generation":{"imageWidth":"","imageHeight":"","thumbImageWidth":"","thumbImageHeight":""},"thumbs":{"thumbWidth":"96","thumbHeight":"72"},"autoPlay":{"enabled":"true","delay":"7000","stopAtAction":"false","pauseOnHover":"false"},"fullscreen":{"enabled":"true"},"block":{"moveOffset":"900","speed":"1500","delay":"300"}}";s:13:"template_html";s:181:"<div class="rsContent">
  {{image_tag}}
  {{thumbnail}}
  {{html}}
  {{animated_blocks}}
  {{#link_url}}
  <a class="rsLink" href="{{link_url}}">{{title}}</a>
  {{/link_url}}
</div>";}}}